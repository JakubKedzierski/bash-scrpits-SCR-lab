1.
ps -ejH - wyswietla wszystkie procesy w drzewku (czyli rodzice dzieci)

linux.pl -> Domyślnie ps wyświetla procesy mające ten sam efektywny identyfikator
użytkownika (EUID), co bieżący użytkownik, oraz podłączone do tego samego
terminala, do którego podłączona jest osoba uruchamiająca ps.

-f -> dodaje wiecej informacji, wypisuje komendy polecen 
-l -> dodaje informacje o watkach

PID- proces ID
S - stan procesu :
               D    Nieprzerywalnie uśpiony (zazwyczaj wejście/wyjście)
               R    Wykonywany lub możliwy do wykonania (w kolejce do wykonania)
               S    Przerywalnie uśpiony (czekający na zakończenie zdarzenia)
               T    Zatrzymany przez sygnał kontroli zadań
               t    Zatrzymany przez program debugujący podczas śledzenia
               W    Stronicowany (niepoprawne od wersji jądra 2.6.xx)
               X    Zmarły (nigdy nie powinno wystąpić)
               Z    Proces niefunkcjonujący ("zombie"), zakończony, ale nieusunięty przez rodzica
i dodatkowo w innym formacie:
               <    O wysokim priorytecie (niemiły dla innych użytkowników)
               N    O niskim priorytecie (miły dla innych użytkowników)
               L    Mający zablokowane strony w pamięci (dla czasu rzeczywistego lub IO)
               s    Będący liderem sesji
               l    Wielowątkowy (używając CLONE_THREAD, jak to robi NPTL pthreads)
               +    Będący w pierwszoplanowej grupie procesów

F - flagi procesu:
    1    sforkowany, ale nie wykonał exec.
    4    używał uprawnień superużytkownika.

tty          Numer urządzenia terminala kontrolującego
cmd          Sama nazwa programu wykonywalnego

 WCHAN     Nazwa funkcji jądra, w której proces jest uśpiony, lub "-", jeśli
                             proces jest wykonywany, lub "*", jeśli proces jest wielowątkowy, a
                             ps nie wyświetla wątków.

C         Wartość liczbowa procentu użycia procesowa

Time - laczne zuzycie procesora w czasie
STIME - poczatek procesu
PRI - priorytet procesu
NI - liczba nice 
ADDR - adres w pamieci procesu
SZ- zuzycie wirtualnej pamieci (jeden duzy obszar pamieci operacyjnej dla procesu gdzie tak naprawde jest podzielone na RAM, dysk itp)
%cpu współczynnik cputime/realtime
rss czyli niewyswapowana pamięć, której zadanie używało w kilobajtach
VSZ    Użycie wirtualnej pamięci dla całego procesu w KiB (1024-bajtowa).

-u userlist
              Wybór przez podanie efektywnego ID użytkownika (EUID) bądź nazwy. Wybiera procesy,
              których efektywna nazwa użytkownika lub ID jest w userlist, czyli np -u 1000 - wszystkie co UID=1000
-t Wybór przez tty. Wybiera procesy podłączone do terminali podanych w liście ttylist, - procesy niepodlaczone do terminala
-p pidlist Wybór przez PID

267 procesow ps -e |echo $(($(wc -l)-2))
pgrep - uzyskanie numeru pid 
sshd - szyfrowane sesje terminalowe - 0, po zalogowaniu na diablo: 5, na panamincie 19

2.
wystapilo poprawne przejscie do komendy upstart - zamiennik inita


3. 
./do3.sh |cat | calc
Rodzicem jest terminal dla kolejnych komend w potoku 
WCHAN - pipe_w
PPID wspolny

5.
kuba@ubuntu:~$ kill -s SIGFPE `pgrep zadanie5.sh` 
kuba@ubuntu:~$ kill -s SIGQUIT `pgrep zadanie5.sh`
kuba@ubuntu:~$ kill -s SIGKILL `pgrep zadanie5.sh`
Floating point exception (core dumped)
Quit (core dumped)
Killed
po SIGINT smierc bez informacji
po SIGSTOP i SIGCONT stop, kontynuacja

po przejeciu przez trap sygnaly nie powoduja zmiany dzialania programu oprocz:
SIGKILL - zabija dalej proces, SIGSTOP i SIGCONT - dzialaja pomimo przechwytywania
Taki wynik dzialania moze wynikac z przyjetego interpretera - bash

trap -l -> listing

7
Wiekszosc procesow ma nice na 80, niektore 60 (przy liczbie nice -20). Nice mozemy dac tylko wieksze (czyli pogorszyc priorytet)
renice -n nowa liczba -p proces 
nice - przy uruchamianiu programow

./zadanie7.sh & nice -n 20 ./zadanie8.sh - konieczne bylo interperetowanie przez ten sam interpreter - skrypt z wieksza liczba nice uruchamia sie pozniej
Zauwazylem ze jesli podam w jednej lini 2 razy polecenia nice to nie dziala
